#!/usr/bin/env python3
"""
Script para corregir g√©neros problem√°ticos en la base de datos de DjAlfin
Corrige g√©neros como "N/A", "2008 Universal Fire Victim" y g√©neros muy largos
"""

import sqlite3
import os

def fix_genres():
    """Corrige los g√©neros problem√°ticos en la base de datos."""
    # Usar la misma ruta que DatabaseManager
    project_root = os.path.abspath(os.path.dirname(__file__))
    config_path = os.path.join(project_root, "config")
    db_path = os.path.join(config_path, "library.db")
    
    if not os.path.exists(db_path):
        print(f"‚ùå Base de datos no encontrada en: {db_path}")
        return
    
    print(f"üîß Iniciando correcci√≥n de g√©neros: {db_path}")
    
    try:
        with sqlite3.connect(db_path) as conn:
            cursor = conn.cursor()
            
            # Mostrar estado actual
            print("\nüìä Estado actual de g√©neros problem√°ticos:")
            show_problematic_genres(cursor)
            
            # Correcciones espec√≠ficas basadas en artista y t√≠tulo
            corrections = [
                # Pistas con g√©nero "N/A" - asignar g√©neros apropiados
                ("DJ Edits Boom Shack-A-Lak", "Apache Indian", "Reggae"),
                ("DJ Edits: Monster", "Automatic", "Electronic"),
                ("In' All Over The World DJ Edit", "N A", "Pop"),
                ("School'S Out DJ Edit", "N A", "Rock"),
                ("She's Electric (DJ Edit)", "N/A", "Rock"),
                
                # Pistas con g√©nero "2008 Universal Fire Victim" - corregir a g√©neros apropiados
                ("9 To 5 DJ Edit", "Dolly Parton", "Country"),
                ("The Night Away DJ Edit", "Mavericks", "Country Rock"),
                
                # G√©nero muy largo - simplificar
                ("I Will Always Love You Hex Hector Club Mix", "Whitney Houston", "R&B")
            ]
            
            print("\nüîÑ Aplicando correcciones:")
            
            for title, artist, new_genre in corrections:
                # Actualizar el g√©nero
                cursor.execute("""
                    UPDATE tracks 
                    SET genre = ? 
                    WHERE title = ? AND artist = ?
                """, (new_genre, title, artist))
                
                if cursor.rowcount > 0:
                    print(f"‚úÖ '{title}' por {artist} ‚Üí '{new_genre}'")
                else:
                    print(f"‚ö†Ô∏è  No se encontr√≥: '{title}' por {artist}")
            
            conn.commit()
            
            # Mostrar estado despu√©s de las correcciones
            print("\nüìä Estado despu√©s de las correcciones:")
            show_genre_summary(cursor)
            
            print("\nüéâ Correcci√≥n de g√©neros completada exitosamente.")
            
    except sqlite3.Error as e:
        print(f"‚ùå Error durante la correcci√≥n: {e}")
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")

def show_problematic_genres(cursor):
    """Muestra los g√©neros problem√°ticos actuales."""
    problematic_genres = ["N/A", "2008 Universal Fire Victim", "Easy Listening Pop Soul Contemporary R & B"]
    
    for genre in problematic_genres:
        cursor.execute("SELECT COUNT(*) FROM tracks WHERE genre = ?", (genre,))
        count = cursor.fetchone()[0]
        if count > 0:
            print(f"  ‚Ä¢ '{genre}': {count} pistas")

def show_genre_summary(cursor):
    """Muestra un resumen de todos los g√©neros."""
    cursor.execute("""
        SELECT genre, COUNT(*) as count 
        FROM tracks 
        WHERE genre IS NOT NULL AND genre != '' 
        GROUP BY genre 
        ORDER BY count DESC
    """)
    
    genres = cursor.fetchall()
    print(f"  üìà Total de g√©neros √∫nicos: {len(genres)}")
    
    for genre, count in genres:
        print(f"  ‚Ä¢ {genre}: {count} pistas")
    
    # Verificar si quedan g√©neros problem√°ticos
    cursor.execute("""
        SELECT COUNT(*) FROM tracks 
        WHERE genre IN ('N/A', '2008 Universal Fire Victim', 'Easy Listening Pop Soul Contemporary R & B')
    """)
    problematic_count = cursor.fetchone()[0]
    
    if problematic_count == 0:
        print("\n‚úÖ No quedan g√©neros problem√°ticos")
    else:
        print(f"\n‚ö†Ô∏è  Quedan {problematic_count} g√©neros problem√°ticos")

if __name__ == "__main__":
    fix_genres()